<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <relativePath>../pom</relativePath>
    <groupId>org.ops4j.peaberry.build</groupId>
    <artifactId>parent</artifactId>
    <version>1.2</version>
  </parent>

  <packaging>bundle</packaging>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ops4j</groupId>
  <artifactId>peaberry</artifactId>

  <name>peaberry - Dynamic services for Google-Guice</name>

  <url>http://code.google.com/p/peaberry/</url>

  <description>
 The peaberry project is an extension library for Google-Guice
 that supports dependency injection of dynamic services.

 It provides OSGi integration out of the box, and has plug-in
 support for other registry-based service frameworks. It ships
 as an OSGi bundle that can be dropped into any R4 framework,
 such as Apache Felix or Eclipse/Equinox.
  </description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>jarjar-maven-plugin</artifactId>
        <version>1.5</version>
        <configuration>
          <input>{classes}</input>
          <rules>
            <rule>
              <pattern>jsr166y.*</pattern>
              <result>org.ops4j.peaberry.internal.@1</result>
            </rule>
            <rule>
              <pattern>org.objectweb.asm.*</pattern>
              <result>org.ops4j.peaberry.internal.@1</result>
            </rule>
            <rule>
              <pattern>org.osgi.framework.Filter</pattern>
              <result>org.ops4j.peaberry.internal.Filter</result>
            </rule>
            <rule>
              <pattern>org.osgi.framework.FrameworkUtil</pattern>
              <result>org.ops4j.peaberry.internal.FrameworkUtil</result>
            </rule>
            <rule>
              <pattern>org.osgi.framework.InvalidSyntaxException</pattern>
              <result>org.ops4j.peaberry.internal.InvalidSyntaxException</result>
            </rule>
            <keep>
              <pattern>org.ops4j.peaberry.**</pattern>
            </keep>
          </rules>
        </configuration>
        <executions>
          <execution>
            <id>jarjar-classes</id>
            <phase>process-classes</phase>
            <goals>
              <goal>jarjar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <module>org.ops4j.peaberry</module>
            <Bundle-Activator>$(module).osgi.Activator</Bundle-Activator>
            <extra.imports>javax.*;resolution:=optional</extra.imports>
            <api.version>1.1</api.version>
            <Export-Package>
              $(module)(|.builders|.cache|.util);version=$(api.version)
            </Export-Package>
            <Private-Package>
              $(module).*
            </Private-Package>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.aopalliance</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.javax-inject</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>

</project>
